import math

x = {}
x[0] = [1, 1]   # начальная точка (точки хранятся списком векторов)

def f(a):
    '''целевая функция'''
    # 𝑓(𝑥1, 𝑥2) = 2(𝑥1)^2 + 5(𝑥2)^2 + (𝑥1)(𝑥2) − 3(𝑥1) − (𝑥2)
    return math.prod([2, (pow(a[0], 2))]) + math.prod([5, (pow(a[1], 2))]) + math.prod([a[0], a[1]]) - math.prod([3, a[0]]) - a[1]

def HJ(x, h, e):
    '''
    h - длинна шага
    e - точност
    '''

    i = 0
    while h > e:
        if f(x[i]) > f([x[i][0] + h, x[i][1]]):
            x[i+1] = [x[i][0] + h, x[i][1]]
        elif f(x[i]) > f([x[i][0] - h, x[i][1]]):
            x[i+1] = [x[i][0] - h , x[i][1]]
        elif f(x[i]) > f([x[i][0], x[i][1] + h]):
            x[i+1] = [x[i][0], x[i][1] + h]
        elif f(x[i]) > f([x[i][0], x[i][1] - h]):
            x[i+1] = [x[i][0], x[i][1] - h]
        else:
            x[i+1] = x[i]
            h = h/10

        # print([i, h, x[i], f(x[i])])
        print(f'[{i}, %0.3f, [%0.3f; %0.3f], %0.3f]' % (h, x[i][0], x[i][1], f(x[i])))
        i += 1

    print('')
    print('оптимальное значение х = [%0.3f; %0.3f]' % (x[i][0], x[i][0]))
    print('оптимальное значение f(х) = %0.3f' % (f(x[i])))


HJ(x, 0.5, 0.0001)